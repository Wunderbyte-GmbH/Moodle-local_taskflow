{"version":3,"file":"uploadusers.min.js","sources":["../src/uploadusers.js"],"sourcesContent":["/**\n * JS for handling the upload users modal in a form.\n *\n * @module local_taskflow/uploadusers\n * @copyright 2025\n * @license http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport Notification from 'core/notification';\nimport ModalForm from 'core_form/modalform';\n\n/**\n * Initializes the upload users modal trigger.\n *\n * Attaches a click event listener to the element with ID 'openuploadusersmodal',\n * which opens a modal form for uploading users and shows a success notification\n * upon form submission.\n */\nexport const init = () => {\n    const trigger = document.querySelector('#openuploadusersmodal');\n    if (!trigger) {\n        return;\n    }\n\n    trigger.addEventListener('click', () => {\n        const modal = new ModalForm({\n            formClass: 'local_taskflow\\\\form\\\\uploaduser',\n            modalConfig: {\n                title: 'Upload Users (JSON)',\n            }\n        });\n\n        modal.addEventListener(modal.events.FORM_SUBMITTED, function(e) {\n            // eslint-disable-next-line no-console\n            console.log('worked', e.detail);\n            Notification.addNotification({\n                message: 'Your upload was successful! ' + e.detail.time,\n                type: 'success',\n                closeButton: true,\n            });\n\n            setTimeout(() => {\n                window.location.href = window.location.origin + window.location.pathname;\n            }, 10000);\n        });\n\n        modal.show();\n    });\n\n\n    const fetchtrigger = document.querySelector('#triggerdwhimport');\n    if (!fetchtrigger) {\n        return;\n    }\n\n    fetchtrigger.addEventListener('click', () => {\n        const modal = new ModalForm({\n            formClass: 'local_taskflow\\\\form\\\\importdwh',\n            modalConfig: {\n                title: 'Trigger DWH Import manually',\n            }\n        });\n\n        modal.addEventListener(modal.events.FORM_SUBMITTED, function(e) {\n            // eslint-disable-next-line no-console\n            console.log('wordfsfefseked', e);\n            Notification.addNotification({\n                message: 'Your import was triggered successfully!',\n                type: 'success',\n                closeButton: true,\n            });\n            if (e.detail && e.detail.msg) {\n                Notification.addNotification({\n                    message: e.detail.msg,\n                    type: 'success',\n                    closeButton: true,\n                });\n            }\n        });\n\n        modal.show();\n    });\n};\n"],"names":["_interopRequireDefault","e","__esModule","default","_notification","_modalform","_exports","init","trigger","document","querySelector","addEventListener","modal","ModalForm","formClass","modalConfig","title","events","FORM_SUBMITTED","console","log","detail","Notification","addNotification","message","time","type","closeButton","setTimeout","window","location","href","origin","pathname","show","fetchtrigger","msg"],"mappings":"uIAS4C,SAAAA,uBAAAC,GAAAA,OAAAA,GAAAA,EAAAC,WAAAD,EAAAE,CAAAA,QAAAF,EAAA;;;;;;;kFAD5CG,cAAAJ,uBAAAI,eACAC,WAAAL,uBAAAK,YAyEEC,SAAAC,KAhEkBA,KAChB,MAAMC,QAAUC,SAASC,cAAc,yBACvC,IAAKF,QACD,OAGJA,QAAQG,iBAAiB,SAAS,KAC9B,MAAMC,MAAQ,IAAIC,WAAAA,QAAU,CACxBC,UAAW,mCACXC,YAAa,CACTC,MAAO,yBAIfJ,MAAMD,iBAAiBC,MAAMK,OAAOC,gBAAgB,SAASjB,GAEzDkB,QAAQC,IAAI,SAAUnB,EAAEoB,QACxBC,cAAYnB,QAACoB,gBAAgB,CACzBC,QAAS,+BAAiCvB,EAAEoB,OAAOI,KACnDC,KAAM,UACNC,aAAa,IAGjBC,YAAW,KACPC,OAAOC,SAASC,KAAOF,OAAOC,SAASE,OAASH,OAAOC,SAASG,QAAQ,GACzE,IACP,IAEArB,MAAMsB,MAAM,IAIhB,MAAMC,aAAe1B,SAASC,cAAc,qBACvCyB,cAILA,aAAaxB,iBAAiB,SAAS,KACnC,MAAMC,MAAQ,IAAIC,WAAAA,QAAU,CACxBC,UAAW,kCACXC,YAAa,CACTC,MAAO,iCAIfJ,MAAMD,iBAAiBC,MAAMK,OAAOC,gBAAgB,SAASjB,GAEzDkB,QAAQC,IAAI,iBAAkBnB,GAC9BqB,cAAYnB,QAACoB,gBAAgB,CACzBC,QAAS,0CACTE,KAAM,UACNC,aAAa,IAEb1B,EAAEoB,QAAUpB,EAAEoB,OAAOe,KACrBd,cAAYnB,QAACoB,gBAAgB,CACzBC,QAASvB,EAAEoB,OAAOe,IAClBV,KAAM,UACNC,aAAa,GAGzB,IAEAf,MAAMsB,MAAM,GACd,CACJ"}
