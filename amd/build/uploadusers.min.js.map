{"version":3,"file":"uploadusers.min.js","sources":["../src/uploadusers.js"],"sourcesContent":["/**\n * JS for handling the upload users modal in a form.\n *\n * @module local_taskflow/uploadusers\n * @copyright 2025\n * @license http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\ndefine(['core_form/modalform'], function(ModalForm) {\n\n    return {\n        init: function() {\n            const trigger = document.querySelector('#openuploadusersmodal');\n            if (!trigger) {\n                return;\n            }\n\n            trigger.addEventListener('click', function() {\n                const modal = new ModalForm({\n                    formClass: 'local_taskflow\\\\form\\\\uploaduser',\n                    modalConfig: {\n                        title: 'Upload Users (JSON)',\n                    }\n                });\n\n                modal.addEventListener(modal.events.FORM_SUBMITTED, (e) => {\n                    const response = e.detail;\n                    alert('Upload successful. Entries: ' + (response.data.count ?? 0));\n                    // You can also do more, like refreshing part of the page.\n                });\n\n                modal.show();\n            });\n        }\n    };\n});"],"names":["define","ModalForm","init","trigger","document","querySelector","addEventListener","modal","formClass","modalConfig","title","events","FORM_SUBMITTED","e","response","detail","alert","data","count","show"],"mappings":";;;;;;;AAQAA,oCAAO,CAAC,wBAAwB,SAASC,iBAE9B,CACHC,KAAM,iBACIC,QAAUC,SAASC,cAAc,yBAClCF,SAILA,QAAQG,iBAAiB,SAAS,iBACxBC,MAAQ,IAAIN,UAAU,CACxBO,UAAW,mCACXC,YAAa,CACTC,MAAO,yBAIfH,MAAMD,iBAAiBC,MAAMI,OAAOC,gBAAiBC,UAC3CC,SAAWD,EAAEE,OACnBC,MAAM,gCAAkCF,SAASG,KAAKC,OAAS,OAInEX,MAAMY"}